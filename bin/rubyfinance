#!/usr/bin/env ruby
$LOAD_PATH.unshift File.join(File.dirname(__FILE__), '..', 'lib')
require 'rfinance'
require 'optparse'
require 'optparse/time'
require 'ostruct'

#
# Main emethod for accessing the application. Commands can be entered from here with the option parser.
# Implementations methods are grouped at the bottom.
class Optparse 
  include Rfinance
  #
  # EACH OPTION HAS ITS OWN METHODS HERE:
  #
  def optEarningsReport(opt)
    self.earningsReport
  end

  def optSnapshot
    puts 'snap'
  end

  #
  # Return a structure describing the options.
  #
  def self.parse(args)
    # The options specified on the command line will be collected in *options*.
    # We set default values here.
    options = OpenStruct.new
    options.encoding = "utf8"
    options.transfer_type = :auto
    options.verbose = false

    opts = OptionParser.new do |opts|
      opts.banner = "Usage: rubyfinnance [options]"
      opts.separator ""
      opts.separator "Specific options:"

      opts.on("-e","--earnings opt","Generate a table of earnings") do |opt|
        Optparse.new.optEarningsReport(opt)
        exit
      end

      opts.on("-s","--snapshot","Download market snapshot") do
        Optparse.new.optSnapshot
        exit
      end

      opts.separator ""
      opts.separator "Common options:"

      opts.on_tail("-h", "--help", "Show this message") do
        puts opts
        exit
      end

    end
    opts.parse!(args)
    options
  end  # parse()

  # RUNS THE APPLICATION
  options = Optparse.parse(ARGV)

end  # class Optparse

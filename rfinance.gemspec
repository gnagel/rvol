# Generated by jeweler
# DO NOT EDIT THIS FILE DIRECTLY
# Instead, edit Jeweler::Tasks in Rakefile, and run the gemspec command
# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = %q{rfinance}
  s.version = "0.0.4"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["Toni Karhu"]
  s.date = %q{2010-10-24}
  s.default_executable = %q{rfinance.rb}
  s.description = %q{The purpose of rfinace is to provide financial information for data mining from the internet. I trade stocks, options and futures as a hobby. 
    Often some of the strategies that i have used include looking at earnings dates for stocks and investing in these dates with complex options strategies. To find
    these opportunities i need some information. I need information about earnings dates, i need information about options chains, i need information about volatility skews.
    Also as a long term investor i want to invest in companies that are rated highly by online services like msn money ,
    fool, yahoo etc.}
  s.email = %q{tonikarhu@gmail.com}
  s.executables = ["rfinance.rb"]
  s.extra_rdoc_files = [
    "LICENSE",
     "README.rdoc"
  ]
  s.files = [
    ".document",
     ".gitignore",
     ".project",
     "LICENSE",
     "README.rdoc",
     "Rakefile",
     "VERSION",
     "bin/rfinance.rb",
     "data/markettoday.db",
     "data/spx.txt",
     "features/downloadChainsForTicker.feature",
     "features/downloadearnings.feature",
     "features/rfinance.feature",
     "features/step_definitions/downloadChainsForTicker_steps.rb",
     "features/step_definitions/downloadearnings_steps.rb",
     "features/step_definitions/rfinance_steps.rb",
     "features/support/env.rb",
     "finance.mm",
     "lib/core/datamapper.rb",
     "lib/core/dateutil.rb",
     "lib/core/downloader.rb",
     "lib/math/ivolatility.rb",
     "lib/model/chain.rb",
     "lib/model/earning.rb",
     "lib/model/stock.rb",
     "lib/reports/chains_report.rb",
     "lib/reports/earnings_report.rb",
     "lib/rfinance.rb",
     "lib/scrapers/earningsscraper.rb",
     "lib/scrapers/optionschainsscraper.rb",
     "lib/scrapers/stockscraper.rb",
     "rfinance.gemspec",
     "test/core/test_dateutil.rb",
     "test/core/test_downloader.rb",
     "test/helper.rb",
     "test/math/test_ivolatility.rb",
     "test/model/test_chain.rb",
     "test/model/test_earnings.rb",
     "test/model/test_stock.rb",
     "test/reports/test_chains_report.rb",
     "test/reports/test_earnings_report.rb",
     "test/scrapers/test_earnings_scraper.rb",
     "test/scrapers/test_options_chains_scraper.rb",
     "test/scrapers/test_stockscraper.rb",
     "test/scratchpad.rb",
     "test/test_rfinance.rb"
  ]
  s.homepage = %q{http://github.com/tonik/rfinance}
  s.rdoc_options = ["--charset=UTF-8"]
  s.require_paths = ["lib"]
  s.rubygems_version = %q{1.3.7}
  s.summary = %q{A ruby gem for downloading financial data}
  s.test_files = [
    "test/core/test_dateutil.rb",
     "test/core/test_downloader.rb",
     "test/helper.rb",
     "test/math/test_ivolatility.rb",
     "test/model/test_chain.rb",
     "test/model/test_earnings.rb",
     "test/model/test_stock.rb",
     "test/reports/test_chains_report.rb",
     "test/reports/test_earnings_report.rb",
     "test/scrapers/test_earnings_scraper.rb",
     "test/scrapers/test_options_chains_scraper.rb",
     "test/scrapers/test_stockscraper.rb",
     "test/scratchpad.rb",
     "test/test_rfinance.rb"
  ]

  if s.respond_to? :specification_version then
    current_version = Gem::Specification::CURRENT_SPECIFICATION_VERSION
    s.specification_version = 3

    if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then
      s.add_development_dependency(%q<thoughtbot-shoulda>, [">= 0"])
      s.add_development_dependency(%q<cucumber>, [">= 0"])
    else
      s.add_dependency(%q<thoughtbot-shoulda>, [">= 0"])
      s.add_dependency(%q<cucumber>, [">= 0"])
    end
  else
    s.add_dependency(%q<thoughtbot-shoulda>, [">= 0"])
    s.add_dependency(%q<cucumber>, [">= 0"])
  end
end


# Generated by jeweler
# DO NOT EDIT THIS FILE DIRECTLY
# Instead, edit Jeweler::Tasks in Rakefile, and run 'rake gemspec'
# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = "rvol"
  s.version = "0.6.3"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["Toni Karhu"]
  s.date = "2012-08-19"
  s.email = "tonikarhu@gmail.com"
  s.executables = ["rvol"]
  s.extra_rdoc_files = [
    "LICENSE",
    "README.rdoc"
  ]
  s.files = [
    ".autotest",
    ".document",
    ".project",
    ".settings/org.eclipse.ltk.core.refactoring.prefs",
    "LICENSE",
    "README.rdoc",
    "Rakefile",
    "VERSION",
    "bin/rvol",
    "features/rvol.feature",
    "features/step_definitions/rvol_steps.rb",
    "features/support/env.rb",
    "finance.mm",
    "gpl.txt",
    "lib/config.yml",
    "lib/core/cron.rb",
    "lib/core/dateutil.rb",
    "lib/core/downloader.rb",
    "lib/core/rlog.rb",
    "lib/core/util.rb",
    "lib/math/arraymath.rb",
    "lib/math/calculatechains.rb",
    "lib/math/calculatecorrelations.rb",
    "lib/math/calculatestd.rb",
    "lib/math/ivolatility.rb",
    "lib/model/chain.rb",
    "lib/model/earning.rb",
    "lib/model/fundamental.rb",
    "lib/model/portfolio.rb",
    "lib/model/stock.rb",
    "lib/model/stockcorrelation.rb",
    "lib/model/stockdaily.rb",
    "lib/model/stockhistorical.rb",
    "lib/reports/chainsreport.rb",
    "lib/reports/correlationreport.rb",
    "lib/reports/dividendsreport.rb",
    "lib/reports/earningsreport.rb",
    "lib/reports/indexreport.rb",
    "lib/reports/ivolatilityreport.rb",
    "lib/reports/portfolioreport.rb",
    "lib/reports/report.rb",
    "lib/reports/reportprinter.rb",
    "lib/reports/sdreport.rb",
    "lib/reports/weekliesreport.rb",
    "lib/rvol.rb",
    "lib/rvolcmd.rb",
    "lib/scrapers/capsparser.rb",
    "lib/scrapers/earningsparser.rb",
    "lib/scrapers/etf.rb",
    "lib/scrapers/fundamentalscraper.rb",
    "lib/scrapers/historicalscraper.rb",
    "lib/scrapers/optionschainsscraper.rb",
    "lib/scrapers/rss.rb",
    "lib/scrapers/scraper.rb",
    "lib/scrapers/stocks.rb",
    "lib/server/public/css/style.css",
    "lib/server/public/table-images/botleft.png",
    "lib/server/public/table-images/botright.png",
    "lib/server/public/table-images/left.png",
    "lib/server/public/table-images/right.png",
    "lib/server/server.rb",
    "lib/server/views/index.haml",
    "rvol.gemspec",
    "test/core/test_dateErrors.rb",
    "test/core/test_dateutil.rb",
    "test/core/test_tools.rb",
    "test/helper.rb",
    "test/math/test_arraymath.rb",
    "test/math/test_calculatechains.rb",
    "test/math/test_correlation.rb",
    "test/math/test_ivolatility.rb",
    "test/model/istamenttest.html",
    "test/model/test_chain.rb",
    "test/model/test_earnings.rb",
    "test/model/test_istatement.rb",
    "test/model/test_stock.rb",
    "test/reports/test_chains_report.rb",
    "test/reports/test_correlationstdreport.rb",
    "test/reports/test_dividendsreport.rb",
    "test/reports/test_earnings_report.rb",
    "test/reports/test_index_report.rb",
    "test/reports/test_ivolatilityreport.rb",
    "test/reports/test_porfolioreport.rb",
    "test/reports/test_report.rb",
    "test/reports/test_sdreport.rb",
    "test/reports/test_weekliesreport.rb",
    "test/scrapers/test.rb",
    "test/scrapers/test2.rb",
    "test/scrapers/test_capsparser.rb",
    "test/scrapers/test_earningssparser.rb",
    "test/scrapers/test_fundamentalscraper.rb",
    "test/scrapers/test_historicalscraper.rb",
    "test/scrapers/test_options_chains_scraper.rb",
    "test/scrapers/test_parsing.rb",
    "test/scrapers/test_rss_scraper.rb",
    "test/scrapers/test_scraper.rb",
    "test/scrapers/test_stockscraper.rb",
    "test/scratchpad.rb",
    "test/test_rvol.rb"
  ]
  s.homepage = "http://github.com/tonik/rvol"
  s.require_paths = ["lib"]
  s.rubygems_version = "1.8.24"
  s.summary = "Gem for creating a database for datamining stock markets focusing on SP500 data. The created database could be used for instance from R or Matlab or similar to do quantitative analysis. You could script new datamining functions extending the Rvol library, load the data into a statistics package, or use it with your own quantitative framework.  Usage: rvol -s will create the database. The database contains stocks (with industries), options, and implied volatilities and calculated standard deviations for the day. Earnings are downloaded and listed with implied volatilities for front and back month options. There are some reports, which can be generated after the database is downloaded look at rvol -p. There is a funtion to calculate correlations between stocks in the same industry groups (--correlationAll, --correlation10 (10 day correlation),this will take a long time and jruby is recommended for a better use of system resources. Have a look at the website if you want to use mysql for a more robust system."

  if s.respond_to? :specification_version then
    s.specification_version = 3

    if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then
      s.add_development_dependency(%q<cucumber>, [">= 0"])
      s.add_runtime_dependency(%q<json_pure>, [">= 0"])
      s.add_runtime_dependency(%q<data_mapper>, [">= 0"])
      s.add_runtime_dependency(%q<dm-sqlite-adapter>, [">= 0"])
      s.add_runtime_dependency(%q<peach>, [">= 0"])
      s.add_runtime_dependency(%q<ruport>, [">= 0"])
      s.add_runtime_dependency(%q<typhoeus>, [">= 0"])
      s.add_runtime_dependency(%q<ruport-util>, [">= 0"])
      s.add_runtime_dependency(%q<rufus-scheduler>, [">= 0"])
      s.add_runtime_dependency(%q<nokogiri>, [">= 0"])
      s.add_runtime_dependency(%q<statsample>, [">= 0"])
      s.add_runtime_dependency(%q<rufus-scheduler>, [">= 0"])
    else
      s.add_dependency(%q<cucumber>, [">= 0"])
      s.add_dependency(%q<json_pure>, [">= 0"])
      s.add_dependency(%q<data_mapper>, [">= 0"])
      s.add_dependency(%q<dm-sqlite-adapter>, [">= 0"])
      s.add_dependency(%q<peach>, [">= 0"])
      s.add_dependency(%q<ruport>, [">= 0"])
      s.add_dependency(%q<typhoeus>, [">= 0"])
      s.add_dependency(%q<ruport-util>, [">= 0"])
      s.add_dependency(%q<rufus-scheduler>, [">= 0"])
      s.add_dependency(%q<nokogiri>, [">= 0"])
      s.add_dependency(%q<statsample>, [">= 0"])
      s.add_dependency(%q<rufus-scheduler>, [">= 0"])
    end
  else
    s.add_dependency(%q<cucumber>, [">= 0"])
    s.add_dependency(%q<json_pure>, [">= 0"])
    s.add_dependency(%q<data_mapper>, [">= 0"])
    s.add_dependency(%q<dm-sqlite-adapter>, [">= 0"])
    s.add_dependency(%q<peach>, [">= 0"])
    s.add_dependency(%q<ruport>, [">= 0"])
    s.add_dependency(%q<typhoeus>, [">= 0"])
    s.add_dependency(%q<ruport-util>, [">= 0"])
    s.add_dependency(%q<rufus-scheduler>, [">= 0"])
    s.add_dependency(%q<nokogiri>, [">= 0"])
    s.add_dependency(%q<statsample>, [">= 0"])
    s.add_dependency(%q<rufus-scheduler>, [">= 0"])
  end
end

